[
   {
      "id":"1",
      "name":"Eat together",
      "description":"Make a social event to share some food and fun.",
      "keywords":[
         "Social event",
         "Eat",
         "hardcoded"
      ],
      "attributes":{
         "deadlineTs":{
            "type":"integer",
            "description":"The maximum time epoch that any user can accept to be a volunteer"
         },
         "startTs":{
            "type":"integer",
            "description":"The time epoch when the social event is going to start"
         },
         "endTs":{
            "type":"integer",
            "description":"The time epoch when the social event will end"
         }
      },
      "transactions":{
         "volunteerForTask":{
            "type":"object",
            "description":"Accept to attent the event",
            "properties":{
               "volunteerId":{
                  "type":"string",
                  "description":"The identifier of the volunteer that want to be a volunteer"
               }
            }
         },
         "refuseTask":{
            "type":"object",
            "description":"Refuse to attent the event",
            "properties":{
               "volunteerId":{
                  "type":"string",
                  "description":"The identifier of the volunteer that not want to be a volunteer"
               }
            }
         },
         "acceptVolunteer":{
            "type":"object",
            "description":"Accept a volunteer to attend the event",
            "properties":{
               "volunteerId":{
                  "type":"string",
                  "description":"The identifier of the volunteer that was accepted"
               }
            }
         },
         "refuseVolunteer":{
            "type":"object",
            "description":"Refuse a volunteer to attend the event",
            "properties":{
               "volunteerId":{
                  "type":"string",
                  "description":"The identifier of the volunteer that was refused"
               }
            }
         },
         "taskCompleted":{
            "type":"object",
            "description":"Finish the task",
            "properties":{
               "outcome":{
                  "type":"string",
                  "enum":[
                     "cancelled",
                     "completed",
                     "failed"
                  ],
                  "description":"The reason why the task is completed"
               }
            }
         }
      },
      "callbacks":{
         "TextualMessage":{
            "description":"A simple textual message from WeNet to the user",
            "properties":{
               "title":{
                  "type":"string",
                  "description":"The title of the message"
               },
               "text":{
                  "type":"string",
                  "description":"The text of the message"
               },
               "communityId":{
                  "type":"string",
                  "description":"ID of the community related to the message",
                  "nullable":true
               },
               "taskId":{
                  "type":"string",
                  "description":"The identifier of the target task",
                  "example":"28961582-84d2-41d1-b555-c09dce046831",
                  "nullable":true
               }
            }
         },
         "TaskProposalNotification":{
            "description":"This notification is used in order to propose a user to volunteer to a newly created task",
            "properties":{
               "communityId":{
                  "type":"string",
                  "description":"ID of the community related to the message",
                  "nullable":true
               },
               "taskId":{
                  "type":"string",
                  "description":"The identifier of the target task",
                  "example":"28961582-84d2-41d1-b555-c09dce046831",
                  "nullable":true
               }
            }
         },
         "TaskVolunteerNotification":{
            "description":"This notification is used in order to notify the task creator that a new volunteer is proposing to participate to the task",
            "properties":{
               "volunteerId":{
                  "type":"string",
                  "description":"The Wenet ID of the volunteer that is applying to the task"
               },
               "communityId":{
                  "type":"string",
                  "description":"ID of the community related to the message",
                  "nullable":true
               },
               "taskId":{
                  "type":"string",
                  "description":"The identifier of the target task",
                  "example":"28961582-84d2-41d1-b555-c09dce046831",
                  "nullable":true
               }
            }
         },
         "TaskSelectionNotification":{
            "description":"This notification is used in order to notify the user who volunteered about the decision of the task creator",
            "properties":{
               "outcome":{
                  "type":"string",
                  "enum":[
                     "accepted",
                     "refused"
                  ],
                  "example":"accepted"
               },
               "communityId":{
                  "type":"string",
                  "description":"ID of the community related to the message",
                  "nullable":true
               },
               "taskId":{
                  "type":"string",
                  "description":"The identifier of the target task",
                  "example":"28961582-84d2-41d1-b555-c09dce046831",
                  "nullable":true
               }
            }
         },
         "TaskConcludedNotification":{
            "description":"This notification is used in order to notify task participants that a task has been completed, the outcome could be\n* completed (if completed correctly)\n* failed (if something went wrong)\n* cancelled (the creator cancelled the task)",
            "properties":{
               "outcome":{
                  "type":"string",
                  "description":"The outcome of the task (has it been completed with success or not)",
                  "enum":[
                     "cancelled",
                     "completed",
                     "failed"
                  ],
                  "example":"completed"
               },
               "communityId":{
                  "type":"string",
                  "description":"ID of the community related to the message",
                  "nullable":true
               },
               "taskId":{
                  "type":"string",
                  "description":"The identifier of the target task",
                  "nullable":true,
                  "example":"28961582-84d2-41d1-b555-c09dce046831"
               }
            }
         },
         "IncentiveMessage":{
            "description":"This message contains an incentive for an user",
            "properties":{
               "issuer":{
                  "type":"string",
                  "description":"The issuer of the incentive"
               },
               "content":{
                  "type":"string",
                  "description":"The content of the incentive",
                  "example":"we are happy to see your participation in the I-log app, you are doing a great job!"
               },
               "communityId":{
                  "type":"string",
                  "description":"ID of the community related to the message",
                  "nullable":true
               },
               "taskId":{
                  "type":"string",
                  "description":"The identifier of the target task",
                  "example":"28961582-84d2-41d1-b555-c09dce046831",
                  "nullable":true
               }
            }
         },
         "IncentiveBadge":{
            "description":"This is a badge of an incentive",
            "properties":{
               "issuer":{
                  "type":"string",
                  "description":"The issuer of the incentive"
               },
               "badgeClass":{
                  "type":"string",
                  "description":"the class of the badge",
                  "example":"hpqAdI7hQf2maQ13AW1jXA"
               },
               "imageUrl":{
                  "type":"string",
                  "description":"the URL of the image of the badge",
                  "example":"https://wenet.server/media/uploads/badges/assertion-OYmfmtDFSIKG-qeZfXz4QQ.png"
               },
               "criteria":{
                  "type":"string",
                  "description":"the criteria with which the badge was assigned",
                  "example":"The user will get this badge for 50 relations in Twitter"
               },
               "message":{
                  "type":"string",
                  "description":"a human-readable text to be shown to the user when she receives the badge",
                  "example":"Congratulations! you just earned a new badge for your relations on Twitter"
               },
               "communityId":{
                  "type":"string",
                  "description":"ID of the community related to the message",
                  "nullable":true
               },
               "taskId":{
                  "type":"string",
                  "description":"The identifier of the target task",
                  "example":"28961582-84d2-41d1-b555-c09dce046831",
                  "nullable":true
               }
            }
         }
      }
   },
   {
      "id":"ask4help",
      "name":"Ask for Help",
      "description":"Ask a question into your community to helps you",
      "keywords":[
         "question",
         "answer",
         "help"
      ],
      "attributes":{
         "kindOfAnswerer":{
            "type":"string",
            "description":"The type of user shoud answer the question",
            "enum":[
               "different than me",
               "similar to me",
               "anyone"
            ]
         }
      },
      "transactions":{
         "answerTransaction":{
            "type":"object",
            "description":"Answer to a question",
            "properties":{
               "answer":{
                  "type":"string",
                  "description":"The answer to the question"
               }
            }
         },
         "notAnswerTransaction":{
            "description":"Ignore a question"
         },
         "bestAnswerTransaction":{
            "type":"object",
            "description":"Pick the best answer",
            "properties":{
               "transactionId":{
                  "type":"string",
                  "description":"The id of the picked answer transaction"
               },
               "reason":{
                  "type":"string",
                  "nullable":"true",
                  "description":"The reason why the specific answer was picked"
               }
            }
         },
         "moreAnswerTransaction":{
            "description":"Ask some more users"
         },
         "reportQuestionTransaction":{
            "type":"object",
            "description":"Report question",
            "properties":{
               "reason":{
                  "type":"string",
                  "nullable":"true",
                  "description":"The reason why the specific answer was picked"
               },
               "comment":{
                  "type":"string",
                  "nullable":"true",
                  "description":"A specific comment by the reporting user"
               }
            }
         },
         "reportAnswerTransaction":{
            "type":"object",
            "description":"Report answer",
            "properties":{
               "transactionId":{
                  "type":"string",
                  "description":"The id of the picked answer transaction"
               },
               "reason":{
                  "type":"string",
                  "nullable":"true",
                  "description":"The reason why the specific answer was picked"
               },
               "comment":{
                  "type":"string",
                  "nullable":"true",
                  "description":"A specific comment by the reporting user"
               }
            }
         }
      },
      "callbacks":{
         "QuestionToAnswerMessage":{
            "description":"Question to answer",
            "properties":{
               "taskId":{
                  "type":"string",
                  "description":"The id of the task assiciated with the question"
               },
               "question":{
                  "type":"string",
                  "description":"The question to answer to"
               },
               "userId":{
                  "type":"string",
                  "description":"The id of the user who proposed the question"
               }
            }
         },
         "AnsweredQuestionMessage":{
            "description":"Answer to question",
            "properties":{
               "taskId":{
                  "type":"string",
                  "description":"The id of the task assiciated with the question"
               },
               "answer":{
                  "type":"string",
                  "description":"The answer to the question"
               },
               "transactionId":{
                  "type":"string",
                  "description":"The id of the transaction associated to the answer"
               },
               "userId":{
                  "type":"string",
                  "description":"The id of the user who answered the question"
               }
            }
         }
      }
   },
   {
      "id":"wenet-echo-1.0.0",
      "name":"Echo",
      "description":"This tasks echo the transaction messages",
      "keywords":[
         "example",
         "test"
      ],
      "transactions":{
         "echo":{
            "type":"object",
            "description":"Send the echo message",
            "properties":{
               "message":{
                  "type":"string",
                  "description":"The message to echo"
               }
            }
         }
      },
      "callbacks":{
         "echo":{
            "type":"object",
            "properties":{
               "taskId":{
                  "type":"string",
                  "description":"The identifier of the task"
               },
               "communityId":{
                  "type":"string",
                  "description":"The identifier of the community"
               },
               "message":{
                  "type":"string",
                  "description":"The echo message"
               }
            }
         }
      },
      "norms":[
         {
            "whenever":"get_transaction(Transaction) & Transaction.label = \"echo\"",
            "thenceforth":"pull_callback({\"label\":\"echo\",\"attributes\":{\"message\":Transaction.message}},_)"
         }
      ]
   }
]