image: docker:latest

services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  COMPONENT_NAME: "internetofus/$CI_PROJECT_NAME"
  
cache:
  key: "maven-cache"
  paths:
    - .m2/repository

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build_docker_dev:
  stage: build
  script:
    - docker pull $CI_REGISTRY_IMAGE:dev  || true
    - DOCKER_BUILDKIT=1 docker build -f src/dev/docker/Dockerfile --cache-from $CI_REGISTRY_IMAGE:dev -t $COMPONENT_NAME:dev .
    - docker push $CI_REGISTRY_IMAGE:dev

build_docker:
  stage: build
  script:
    - COMPONENT_VERSION=$(grep --max-count=1 '<version>' pom.xml | awk -F '>' '{ print $2 }' | awk -F '<' '{ print $1 }')
    - DOCKER_BUILDKIT=1 docker build -f src/main/docker/Dockerfile -t $COMPONENT_NAME:$COMPONENT_VERSION .
    - docker push $COMPONENT_NAME:$COMPONENT_VERSION

buil_test_site:
  stage: test
  script:
    - docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v $CI_PROJECT_DIR:/app -v $CI_PROJECT_DIR/.m2/repository:/root/.m2/repository -t $COMPONENT_NAME:dev mvn -B -fn clean compile test-compile javadoc:javadoc javadoc:test-javadoc verify site post-site
    - awk -F"," '{ instructions += $4 + $5; covered += $5 } END { print covered, "/", instructions, "instructions covered"; print 100*covered/instructions, "% covered" }' target/site/jacoco/jacoco.csv
    - cp -r target/site public
  artifacts:
    when: always
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml
        - target/failsafe-reports/TEST-*.xml
    paths:
      - public
      - target/site/jacoco/jacoco.xml
