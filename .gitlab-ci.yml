image: docker:latest

services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  COMPONENT_NAME: "internetofus/$CI_PROJECT_NAME"
  MONGO_IMAGE: "mongo:4.4.1"
  PROFILE_MANAGER_IMAGE: "internetofus/profile-manager:0.15.0"
  INTERACTION_PROTOCOL_ENGINE_IMAGE: "internetofus/interaction-protocol-engine:0.12.0"
  
before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - docker pull docker.io/$MONGO_IMAGE
  - docker tag docker.io/$MONGO_IMAGE $MONGO_IMAGE
  - docker pull $CI_REGISTRY/$PROFILE_MANAGER_IMAGE
  - docker tag $CI_REGISTRY/$PROFILE_MANAGER_IMAGE $PROFILE_MANAGER_IMAGE
  - docker pull $CI_REGISTRY/$INTERACTION_PROTOCOL_ENGINE_IMAGE
  - docker tag $CI_REGISTRY/$INTERACTION_PROTOCOL_ENGINE_IMAGE  $INTERACTION_PROTOCOL_ENGINE_IMAGE

build_development_environment:
  stage: build
  script:
    - docker pull $CI_REGISTRY_IMAGE:dev  || true
    - DOCKER_BUILDKIT=1 docker build -f src/dev/docker/Dockerfile --cache-from $CI_REGISTRY_IMAGE:dev -t $CI_REGISTRY/$COMPONENT_NAME:dev .
    - docker push $CI_REGISTRY_IMAGE:dev

buil_test_site:
  stage: test
  script:
    - docker run -v /var/run/docker.sock:/var/run/docker.sock -v ${PWD}:/app $CI_REGISTRY_IMAGE:dev mvn -B -fn clean compile test-compile javadoc:javadoc javadoc:test-javadoc verify site post-site
    - awk -F"," '{ instructions += $4 + $5; covered += $5 } END { print covered, "/", instructions, "instructions covered"; print 100*covered/instructions, "% covered" }' target/site/jacoco/jacoco.csv
    - cp -r target/site public
  artifacts:
    when: always
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml
        - target/failsafe-reports/TEST-*.xml
    paths:
      - public
      - target/site/jacoco/jacoco.xml

deploy_tag:
  stage: deploy
  script:
    - docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
    - docker pull $COMPONENT_NAME:$CI_COMMIT_TAG  || true
    - DOCKER_BUILDKIT=1 docker build -f src/main/docker/Dockerfile --cache-from $COMPONENT_NAME:$CI_COMMIT_TAG -t $COMPONENT_NAME:$CI_COMMIT_TAG .
    - docker push $COMPONENT_NAME:$CI_COMMIT_TAG
  only:
    - tags

deploy_stable:
  stage: deploy
  script:
    - docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
    - docker pull $COMPONENT_NAME:latest  || true
    - DOCKER_BUILDKIT=1 docker build -f src/main/docker/Dockerfile --cache-from $COMPONENT_NAME:latest -t $COMPONENT_NAME:latest .
    - docker push $COMPONENT_NAME:latest
  only:
    - master
